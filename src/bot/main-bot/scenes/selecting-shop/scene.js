import { Bot, Context, InlineKeyboard } from "grammy";
import { supabase } from "../../../shared/utils/database/index.js";
import { decryptData, encryptData } from "../../../shared/utils/encryption.js";
import { activeShopBotsHandlers } from "../../bot.js";
import { sendUnexpectedErrorMessage } from "../../../shared/utils/error.js";
import { run } from "@grammyjs/runner";
import { isShopBotRunning } from "../../../shared/utils/shopBotsManager.js";

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–µ–Ω—é –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å–æ —Å–ø–∏—Å–∫–æ–º –±–æ—Ç–æ–≤-–º–∞–≥–∞–∑–∏–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Context} ctx
 */
export async function getShopsHandler(ctx) {
    const shopsKeyboard = new InlineKeyboard();
    const messageSenderId = ctx.callbackQuery.from.id;
    // –ú–∞—Å—Å–∏–≤ –º–∞–≥–∞–∑–∏–Ω–æ–≤, –≥–¥–µ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–º
    const { data: ownerShops, error: ownerError } = await supabase
        .from("shops")
        .select("*")
        .eq("owner_tg_id", messageSenderId);

    if (ownerError) throw new Error(ownerError);

    for (const shop of ownerShops) {
        const botToken = decryptData(shop.bot_token_hash);
        const shopName = (await new Bot(botToken).api.getMe()).first_name;
        const botStatusEmoji = isShopBotRunning(botToken) ? "üü¢" : "üî¥";
        shopsKeyboard
            .text(
                `${botStatusEmoji} ${shopName} (–í–ª–∞–¥–µ–ª–µ—Ü)`,
                `manage_shop_${shop.id}`
            )
            .row();
    }

    // –ú–∞—Å—Å–∏–≤ id –º–∞–≥–∞–∑–∏–Ω–æ–≤, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º
    const { data: adminShopIds, error: adminIdsError } = await supabase
        .from("administrators")
        .select("shop_id")
        .eq("tg_user_id", messageSenderId);

    if (adminIdsError) throw new Error(adminIdsError);

    // –ú–∞—Å—Å–∏–≤ –º–∞–≥–∞–∑–∏–Ω–æ–≤, –≥–¥–µ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º
    const { data: adminShops, error: adminError } = await supabase
        .from("shops")
        .select("*")
        .in("id", adminShopIds);

    if (adminError) throw new Error(adminError);

    for (const shop of adminShops) {
        const botToken = decryptData(shop.bot_token_hash);
        const shopName = (await new Bot(botToken).api.getMe()).first_name;
        const botStatusEmoji = isShopBotRunning(botToken) ? "üü¢" : "üî¥";
        shopsKeyboard
            .text(
                `${botStatusEmoji} ${shopName} (–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)`,
                `manage_shop_${shop.id}}`
            )
            .row();
    }
    shopsKeyboard.text("‚ùå –ù–∞–∑–∞–¥", "menu");

    await ctx.editMessageText("üõí –í–∞—à —Å–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤:", {
        reply_markup: shopsKeyboard,
    });
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–µ–Ω—é –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –º–∞–≥–∞–∑–∏–Ω–æ–º, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–±—Ä–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
 * @param {Context} ctx
 */
export async function manageShopHandler(ctx) {
    const shopId = ctx.callbackQuery.data.split("_")[2];

    const settingsKeyboard = new InlineKeyboard();

    let { data: shopBotData } = await supabase
        .from("shops")
        .select("*")
        .eq("id", shopId)
        .single();

    const botToken = decryptData(shopBotData.bot_token_hash);
    const isActive = isShopBotRunning(botToken);
    const shopStatus = isActive ? "–í–∫–ª—é—á–µ–Ω ‚úÖ" : "–í—ã–∫–ª—é—á–µ–Ω ‚ùå";

    const telegramShopData = await new Bot(botToken).api.getMe();

    settingsKeyboard
        .text(
            isActive ? "üõë –í—ã–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞" : "üü¢ –í–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞",
            isActive ? `toggle_bot_${shopId}_off` : `toggle_bot_${shopId}_on`
        )
        .text(`üóÇÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—É—â–Ω–æ—Å—Ç—è–º–∏`, `get_categories_${shopId}`)
        .row();

    settingsKeyboard.text("‚ùå –ù–∞–∑–∞–¥", "get_shops");
    await ctx.editMessageText(
        `<b>üè¨ –ò–º—è –º–∞–≥–∞–∑–∏–Ω–∞:</b> ${telegramShopData.first_name}\n` +
            `<b>üîó –°—Å—ã–ª–∫–∞:</b> t.me/${telegramShopData.username}\n` +
            `<b>üìä –°—Ç–∞—Ç—É—Å:</b> ${shopStatus}\n` +
            `<b>üîë –¢–æ–∫–µ–Ω:</b> <tg-spoiler>${botToken}</tg-spoiler>`,
        {
            reply_markup: settingsKeyboard,
            parse_mode: "HTML",
        }
    );
}
