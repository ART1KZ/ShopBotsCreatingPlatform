/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–µ–Ω—é –≥–ª–∞–≤–Ω–æ–≥–æ –±–æ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 * @param {Context} ctx
 * @param {boolean} isEditMessage
 * –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ
 */
export async function menuScene(ctx, isEditMessage = false) {
    ctx.session.step = undefined;
    ctx.session.token = undefined;
    const keyboard = new InlineKeyboard()
        .text("üè¨ –°–æ–∑–¥–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω", "create_shop")
        .row()
        .text("üõçÔ∏è –ú–æ–∏ –º–∞–≥–∞–∑–∏–Ω—ã", "get_shops");

    const message =
        "<b>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>\n\n" +
        "üöÄ –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏ —É–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏–º–∏ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏ –≤ Telegram –ª–µ–≥–∫–æ –∏ –±—ã—Å—Ç—Ä–æ!\n" +
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ üëá";

    if (isEditMessage) {
        await ctx.editMessageText(message, {
            reply_markup: keyboard,
            parse_mode: "HTML",
        });
    } else {
        await ctx.reply(message, {
            reply_markup: keyboard,
            parse_mode: "HTML",
        });
    }
}
